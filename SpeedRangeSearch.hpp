#pragma once

#include <vector>

using namespace std;

#ifndef SPEED_H
#define SPEED_H

const vector<vector<vector<float>>> friction_floors = { {{5222.0f, 573.0f}, {4301.0f, -40.0f}, {4301.0f, 573.0f}},
{{5222.0f, 573.0f}, {5222.0f, -40.0f}, {4301.0f, -40.0f}},
{{5222.0f, 573.0f}, {6298.0f, 573.0f}, {6298.0f, -40.0f}},
{{5222.0f, 573.0f}, {6298.0f, -40.0f}, {5222.0f, -40.0f}},
{{-1638.0f, -1021.0f}, {-2251.0f, -1021.0f}, {-2251.0f, -408.0f}},
{{-1638.0f, -1021.0f}, {-2251.0f, -408.0f}, {-1638.0f, -408.0f}} };

const vector<pair<int, vector<vector<vector<float>>>>> steep_floors = {
	{ 0, {
		{{-7065.0f, 322.0f}, {-6553.0f, 307.0f}, {-7065.0f, 307.0f}}
		}
	},
	{ 152, {
		{{-6553.0f, 307.0f}, {-7065.0f, 322.0f}, {-6041.0f, 307.0f}}
		}
	},
	{ 16384, {
		{{-3993.0f, -613.0f}, {-4146.0f, -306.0f}, {-3993.0f, -306.0f}},
		{{-3993.0f, -613.0f}, {-4146.0f, -613.0f}, {-4146.0f, -306.0f}},
		{{-4453.0f, -613.0f}, {-4607.0f, -306.0f}, {-4453.0f, -306.0f}},
		{{-4453.0f, -613.0f}, {-4607.0f, -613.0f}, {-4607.0f, -306.0f}}
		}
	}
};

const vector<pair<int, vector<vector<vector<float>>>>> walls = {
	{ 0, {
		{{-5570.0f, -675.0f}, {-5488.0f, -675.0f}},
		{{-4607.0f, -613.0f}, {-3993.0f, -613.0f}},
		{{-7986.0f, -511.0f}, {-7065.0f, -511.0f}},
		{{-5570.0f, -470.0f}, {-5488.0f, -470.0f}},
		{{3379.0f, -347.0f}, {3994.0f, -347.0f}},
		{{2048.0f, -347.0f}, {2662.0f, -347.0f}},
		{{-7065.0f, -306.0f}, {-6041.0f, -306.0f}},
		{{-4607.0f, -306.0f}, {-3993.0f, -306.0f}},
		{{-306.0f, -306.0f}, {0.0f, -306.0f}},
		{{6912.0f, -40.0f}, {7526.0f, -40.0f}},
		{{4301.0f, -40.0f}, {6298.0f, -40.0f}},
		{{3072.0f, 61.0f}, {2662.0f, 61.0f}},
		{{-7065.0f, 307.0f}, {-6041.0f, 307.0f}},
		{{-4453.0f, 307.0f}, {-4146.0f, 307.0f}},
		{{-306.0f, 307.0f}, {-921.0f, 307.0f}},
		{{-5570.0f, 471.0f}, {-5488.0f, 471.0f}},
		{{2662.0f, 471.0f}, {3072.0f, 471.0f}},
		{{-7986.0f, 512.0f}, {-7065.0f, 512.0f}},
		{{6912.0f, 573.0f}, {7526.0f, 573.0f}},
		{{4301.0f, 573.0f}, {6298.0f, 573.0f}},
		{{-5570.0f, 676.0f}, {-5488.0f, 676.0f}},
		{{3379.0f, 881.0f}, {3994.0f, 881.0f}},
		{{2048.0f, 881.0f}, {2662.0f, 881.0f}},
		{{-921.0f, 922.0f}, {0.0f, 922.0f}}
		}
	},
	{ 8107, {
		{{-5488.0f, -470.0f}, {-5426.0f, -531.0f}}
		}
	},
	{ 8192, {
		{{3072.0f, -40.0f}, {3379.0f, -347.0f}},
		{{-5631.0f, 532.0f}, {-5570.0f, 471.0f}},
		{{-5488.0f, 676.0f}, {-5426.0f, 614.0f}}
		}
	},
	{ 8209, {
		{{3994.0f, 881.0f}, {4301.0f, 573.0f}}
		}
	},
	{ 8277, {
		{{-5631.0f, -613.0f}, {-5570.0f, -675.0f}}
		}
	},
	{ 16384, {
		{{-7986.0f, -511.0f}, {-7986.0f, 512.0f}},
		{{-7065.0f, -511.0f}, {-7065.0f, 512.0f}},
		{{-6041.0f, -306.0f}, {-6041.0f, 307.0f}},
		{{-5631.0f, 532.0f}, {-5631.0f, 614.0f}},
		{{-5631.0f, -531.0f}, {-5631.0f, -613.0f}},
		{{-5426.0f, 532.0f}, {-5426.0f, 614.0f}},
		{{-5426.0f, -613.0f}, {-5426.0f, -531.0f}},
		{{-4453.0f, -306.0f}, {-4453.0f, 307.0f}},
		{{-4146.0f, -306.0f}, {-4146.0f, 307.0f}},
		//{{-921.0f, 307.0f}, {-921.0f, 922.0f}},
		{{-306.0f, -306.0f}, {-306.0f, 307.0f}},
		{{0.0f, -306.0f}, {0.0f, 922.0f}},
		{{2048.0f, -347.0f}, {2048.0f, 881.0f}},
		{{2662.0f, -347.0f}, {2662.0f, 881.0f}},
		{{3072.0f, -40.0f}, {3072.0f, 573.0f}},
		{{6298.0f, -40.0f}, {6298.0f, 573.0f}},
		{{6912.0f, -40.0f}, {6912.0f, 573.0f}},
		{{7526.0f, -40.0f}, {7526.0f, 573.0f}}
		}
	},
	{ 24491, {
		{{-5631.0f, 614.0f}, {-5570.0f,	676.0f}}
		}
	},
	{ 24559, {
		{{3072.0f, 573.0f}, {3379.0f, 881.0f}}
		}
	},
	{ 24576, {
		{{-5488.0f, -675.0f}, {-5426.0f, -613.0f}},
		{{-5570.0f, -470.0f}, {-5631.0f, -531.0f}},
		{ {4301.0f, -40.0f}, {3994.0f, -347.0f}}
		}
	},
	{ 24660, {
		{{-5488.0f, 471.0f}, {-5426.0f,	532.0f}}
		}
	},
};

float get_ou_max_speed(double x_delta, double z_delta, double x0, double z0);
void get_pu_speed_ranges(double x_delta, double z_delta, double x0, double z0, double min_speed, double max_speed, vector<pair<float, float>> &speed_ranges);
void get_wall_speed_ranges(double x_delta, double z_delta, double x0, double z0, double min_speed, double max_speed, int angle, const vector<vector<vector<float>>> &floors, vector<pair<float, float>> &speed_ranges);
void get_floor_speed_ranges(double x_delta, double z_delta, double x0, double z0, double min_speed, double max_speed, const vector<vector<vector<float>>> &floors, vector<pair<float, float>> &speed_ranges);
void merge_speed_ranges(vector<pair<float, float>> &speed_ranges);

#endif